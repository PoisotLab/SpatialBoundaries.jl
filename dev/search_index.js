var documenterSearchIndex = {"docs":
[{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"EditURL = \"introduction.jl\"","category":"page"},{"location":"vignettes/introduction/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"Broadly the Wombling algorithm traverses a 'landscape' (for example species richness at different degree squares) and describes the the landscape in terms of the Rate of Change (m) (think slope/gradient) and Direction of Change (θ) (direction of slope). For a more in-depth overview you can refer to the preprint available at the following 10.32942/osf.io/sjxd8, otherwise follow along for a high-level overview is roughly outlined in the figure below.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"Although the wombling algorithm (as implemented here) is designed to work with two-dimensional i.e. planar data (as delimited by x and y), it is beneficial to view this plane as a three-dimensional object (or series of curves), as shown in panel A of the figure below. Here the 'amplitude' of the curvature of the plane is determined by the value of z and the rate and direction of change is calculated by using the first-order partial derivative (partial) of the surface (curve) as described by f(xy) (panel B). Using the rate of change it is also possible to identify candidate boundaries (dashed line in panel C) in the landscape that indicate 'shifts' from one state to another.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"(Image: image info)","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"Both rate and direction of change are calculated by interpolating points in a given search window which (depending on how the points are arranged in space), and can be done in two ways.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"Lattice Wombling: For points that are regularly arranged in space the search window is 2 × 2 points. Note that the wombled landscape will be will be smaller than the original landscape (A) due to the interpolation process i.e. where we originally had an n times r grid we now have an (n - 1)(r - 1) sized grid.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"Triangulation Wombling: For points that irregularly arranged in space nearest neigbours are found using delaunay triangualtion and interpolation is between 3 points.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"In this example, we will see how the SpatialBoundaries.jl package works (as well as interpreting the rates and direction of change), by taking a random mid-point displacement landscape, and measuring its rate and direction of change.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"using SpatialBoundaries\nusing NeutralLandscapes\nusing CairoMakie","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"The landscape generation is done using the NeutralLandscapes package, and we will pick a 500x500 grid:","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"landscape_size = (500, 500)\nlandscape = rand(MidpointDisplacement(0.75), landscape_size...)","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"By default, lattice wombling will assume that the cells have the same size, which is 1/n (where n is the number of cells on each side), but  you can specify your own x and y arguments.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"We can take a quick peek at the landscape:","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"heatmap(landscape)","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"Getting the lattice wombling is done with","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"W = wombling(landscape);\nnothing #hide","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"The resulting LatticeWomble object has fields for the rate of change (m), the direction of change in degrees (θ), and the values of the centers of the cells at x and y (note that the grid of rates of change is one cell smaller than the original grid!). These points are in a grid so the Lattice Wombling function was used - note that wombling() will select the appropriate algorithm based on data input.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"Let's have a look at the rate of change:","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"heatmap(W.m, colormap=:navia, colorrange=(0, maximum(W.m)))","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"The rate of change informs us on the potential for there to be a boundary (zone of change) within a window. Cells with a high rate of change are indicative of large differences (changes) in the landscape 'topology' and are suggestive of a boundary as we shift from one 'state' to another.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"The direction of change is also given, and is expressed a wind direction; for instance, an angle of 180° means that the value is smaller in the South, and larger in the North:","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"heatmap(W.θ, colormap=:romaO, colorrange=(0., 360.))","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"The direction of change is not the direction the boundary would be if you were to draw it on the landscape but rather the direction the rate of change is 'moving in'. This means it is possible to think of and use the direction of change independently of calculating boundaries per se and can be used to inform how the landscape is behaving/changing in a more 'continuous' way as opposed to discrete zones/boundaries. For example if changes in species richness are more gradual (rate of change is near constant) but the direction of change is consistently South-North (i.e. 180°) we can still infer that species richness is 'uniformly' increasing in a South-North direction.","category":"page"},{"location":"vignettes/introduction/","page":"Introduction","title":"Introduction","text":"A note on outputs: The new x and y co-ordinates correspond to latitude and longitude respectively (which is the opposite of what one might expect).","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"EditURL = \"boundaries.jl\"","category":"page"},{"location":"vignettes/boundaries/#Finding-boundaries","page":"Finding boundaries","title":"Finding boundaries","text":"","category":"section"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"The output of a wombling operation can be used to pick boundaries, i.e. areas where the values within the landscape transition sharply indicating different 'patches'. We will illustrate this with a simple example of a three-patch landscape.","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"using SpatialBoundaries\nusing CairoMakie","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"Let's create a landscape with two values:","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"A = rand(Float64, 200, 150);\nA[1:80, 1:85] .+= 5.0;\nA[110:end, 130:end] .+= 3.0;\nnothing #hide","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"We can check out what this landscape looks likes:","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"heatmap(A)","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"We can apply wombling to this landscape, assuming that all cells have the same size:","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"W = wombling(A);\nnothing #hide","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"Let's look at the rate of change:","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"heatmap(W.m; colormap = :Greys)","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"Picking the boundaries is done by passing the wombling output to the boundaries function, with a specific threshold giving the proportion of points that should be retained as part of the boundaries. Checking what the effect of this threshold is would be a good idea:","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"thresholds = LinRange(0.0, 0.2, 200)\npatches = [length(boundaries(W, t)) for t in thresholds]\n\nf, ax, plt = lines(thresholds, log1p.(patches), color=:black, linewidth=2)\ntightlimits!(ax)\nax.xlabel = \"Threshold\"\nax.ylabel = \"log(boundary patches + 1)\"\nf","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"Let's eyeball this as 0.01, and see how the patches are distributed.","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"Another way we can look at the boundaries is to see when a patch is considered to be a boundary. To do so we will create an empty matrix, and fill each position with the lowest threshold at which it is considered to be a boundary:","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"b = similar(W.m)\n\nfor t in reverse(LinRange(0.0, 1.0, 300))\n    b[boundaries(W, t)] .= t\nend\n\nheatmap(b, colormap=:tofino, colorrange=(0,1))","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"This also suggests that we will get well delineated patches for low values of the threshold.","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"B = boundaries(W, 0.01);\nnothing #hide","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"In the following figure, cells identified as candidate boundaries are marked in white:","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"f, ax, hm = heatmap(A)\nscatter!(ax, [b.I for b in B], color=:white)\nf","category":"page"},{"location":"vignettes/boundaries/","page":"Finding boundaries","title":"Finding boundaries","text":"We can see that the boundaries of the patches have been well identified!","category":"page"},{"location":"#SpatialBoundaries.jl","page":"SpatialBoundaries.jl","title":"SpatialBoundaries.jl","text":"","category":"section"},{"location":"#Core-functions","page":"SpatialBoundaries.jl","title":"Core functions","text":"","category":"section"},{"location":"","page":"SpatialBoundaries.jl","title":"SpatialBoundaries.jl","text":"wombling\nboundaries","category":"page"},{"location":"#SpatialBoundaries.wombling","page":"SpatialBoundaries.jl","title":"SpatialBoundaries.wombling","text":"wombling(x::Vector{T}, y::Vector{T}, z::Vector{T}) where {T<:Number}\n\nWrapper function that implements the triangulation wombling algorithm for points that are irregularly arranged in space.\n\n\n\n\n\nwombling(x::Vector{T}, y::Vector{T}, z::Matrix{T}) where {T<:Number}\n\nWrapper function that implements the lattice wombling algorithm for points that are regularly arranged in space. Note that the matrix is presented in a way that is flipped, i.e. the x coordinates corresponds to the rows, and the y coordinates correspond to the columns. If you want to think of x and y as geographic coordinates, y are the longitudes, and x are the latitudes. Using the bindings for SimpleSDMLayers, this conversion will be performed automatically.\n\n\n\n\n\nwombling(m::Matrix{T}) where {T<:Number}\n\nShortcut to womble a matrix (using lattice wombling) when no x and y positions are given - the cell size in each dimension is expected to be 1.\n\n\n\n\n\n","category":"function"},{"location":"#SpatialBoundaries.boundaries","page":"SpatialBoundaries.jl","title":"SpatialBoundaries.boundaries","text":"boundaries(W::Womble, t=0.1; ignorezero=false)\n\nExtracts candidate boundaries using calculated wombling object W on specified threshold t. Default threshold is 0.1, meaning that the top 10% of pixels are selected as part of the boundaries. This function returns a list of indices identifying which simplices are part of the boundaries. The NaN values in the rates of change are not going to be a part of the boundaries. The keyword ignorezero, which defaults to false, can be used to remove the points with a rate of change of 0.\n\n\n\n\n\n","category":"function"},{"location":"#Types","page":"SpatialBoundaries.jl","title":"Types","text":"","category":"section"},{"location":"","page":"SpatialBoundaries.jl","title":"SpatialBoundaries.jl","text":"LatticeWomble\nTriangulationWomble\nWomble","category":"page"},{"location":"#SpatialBoundaries.LatticeWomble","page":"SpatialBoundaries.jl","title":"SpatialBoundaries.LatticeWomble","text":"LatticeWomble{T <: Number} <: Womble\n\nA set of data (and co-ordinates) that are regularly arranged in space are of type LatticeWomble after having been passed through wombling - the fields in this type are\n\nm, a matrix of rate of change at each (x,y) co-ordinate\nθ, a matrix of direction of change at each (x,y) co-ordinate\nx and y, the coordinates of the center of each cell\n\nNote that the type of x and y should be the same as the element type of m and θ, because these values are all used when calculating the rate of change and that x and y correspond to latitude and longitude respectively.\n\n\n\n\n\n","category":"type"},{"location":"#SpatialBoundaries.TriangulationWomble","page":"SpatialBoundaries.jl","title":"SpatialBoundaries.TriangulationWomble","text":"TriangulationWomble{T <: Number} <: Womble\n\nA set of data (and co-ordinates) that are irregularly arranged in space are of type TriangulationWomble after having been passed through wombling - the fields in this type are\n\nm, a vector of rate of change at each (x,y) co-ordinate\nθ, a vector of direction of change at each (x,y) co-ordinate\nx and y, the coordinates of the barycenter of each triangle in the plan\n\nNote that the type of x and y should be the same as the element type of m and θ, because these values are all used when calculating the rate of change and that x and y correspond to latitude and longitude respectively.\n\n\n\n\n\n","category":"type"},{"location":"#SpatialBoundaries.Womble","page":"SpatialBoundaries.jl","title":"SpatialBoundaries.Womble","text":"Womble\n\nThe Womble abstract type is a catch-all for specific wombling outputs.\n\n\n\n\n\n","category":"type"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"EditURL = \"triangulation.jl\"","category":"page"},{"location":"vignettes/triangulation/#Triangulation-wombling","page":"Triangulation wombling","title":"Triangulation wombling","text":"","category":"section"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"using SpatialBoundaries\nusing CairoMakie\nusing StatsBase","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"Get some points at random","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"n = 500\nx = 2rand(n)\ny = rand(n)\nz = [(x[i] <= 0.5) & (y[i] <= 0.5) ? rand() : rand() .+ 1.2 for i in eachindex(x)]\n\nscatter(x, y; color = z)","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"Womble","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"W = wombling(x, y, z)","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"Get the rate of change","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"scatter(x, y; color = :lightgrey)\nscatter!(W.x, W.y; color = log1p.(W.m))\ncurrent_figure()","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"Angle histogram","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"f = Figure()\nax = PolarAxis(f[1, 1])\nh = fit(Histogram, deg2rad.(values(W.θ)); nbins = 100)\nstairs!(ax, h.edges[1], h.weights[[axes(h.weights, 1)..., 1]]; color = :teal, linewidth = 2)\ncurrent_figure()","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"Show the rotation with a color","category":"page"},{"location":"vignettes/triangulation/","page":"Triangulation wombling","title":"Triangulation wombling","text":"scatter(W.x, W.y; color = W.θ, colormap = :vikO, colorrange = (0, 360))","category":"page"}]
}
